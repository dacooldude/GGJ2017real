<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_old</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
random_get_seed()


lval=0
vx=0
vy=0
val=random(10)
val2=0
image_speed=0
type=0

at=0
safet=0

tt=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if image_index=1 type=1
if (sqrt(sqr(x-obj_player.x)+sqr(y-obj_player.y)) &lt; 250 and keyboard_check(vk_space)) or place_meeting(x,y,obj_waveb)
{
if type=1
{
if at&lt;1 audio_play_sound(angry2,10,false)
at=100
}
else
{
if place_meeting(x,y,obj_waveb)
{
vx += 3 * cos(arctan2(y-obj_player.y,x-obj_player.x))
vy += 3 * sin(arctan2(y-obj_player.y,x-obj_player.x))
}
else
{
vx += (4-distance_to_object(obj_player)/400) * cos(arctan2(y-obj_player.y,x-obj_player.x))
vy += (4-distance_to_object(obj_player)/400) * sin(arctan2(y-obj_player.y,x-obj_player.x))
}
}

}
if !place_meeting(x+vx,y,obj_wall) x+=vx
    else 
        {
        while !place_meeting(x+sign(vx),y,obj_wall) x+=sign(vx)
        vx=0
        }
vx*=.9
if abs(vx)&lt;.1 vx=0
if vx&gt;2 vx=2
if vx&lt;-2 vx=-2

if !place_meeting(x,y+vy,obj_wall) y+=vy
    else 
        {
        vy=0
        }
vy*=.9
if abs(vy)&lt;.1 vy=0
if vy&gt;2 vy=2
if vy&lt;-2 vy=-2

if (irandom(80)=20) and vx=0 and vy =0
{
val += random(360) 
vx += 2 * cos(val)
vy += 2 * sin(val)
}

clamp(x,0,500)
clamp(y,0,500)

if at&gt;0
{
vx += -.8 * cos(arctan2(y-obj_player.y,x-obj_player.x))
vy += -.8 * sin(arctan2(y-obj_player.y,x-obj_player.x))
at-=1
}
val2=0
if global.pow&gt;0 repeat(ds_list_size(global.sxvals))
{
if distance_to_point(ds_list_find_value(global.sxvals,val2),ds_list_find_value(global.syvals,val2))&lt;400
{
vx += (1) * cos(arctan2(y-ds_list_find_value(global.syvals,val2),x-ds_list_find_value(global.sxvals,val2)))
vy += (1) * sin(arctan2(y-ds_list_find_value(global.syvals,val2),x-ds_list_find_value(global.sxvals,val2)))
}
val2+=1
}

if place_meeting(x,y,obj_safe) safet+=1
if safet&gt;120 and position_meeting(x,y,obj_safe) ds_list_replace(global.oldsf,lval,1)

if vx&gt;1 image_xscale=1
if vx&lt;-1 image_xscale=-1

if type=1 and at&gt;0 image_index=2
else 
{if type=1 image_index=1
}

if type=1 and irandom(240)=239 audio_play_sound(angry1,10,false)

tt+=1
if tt=10
{
lval=ds_list_size(global.oldsf)
ds_list_add(global.oldsf,0)
}

if ds_list_find_value(global.oldsf,lval)=1 instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
